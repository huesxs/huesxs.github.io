[ { "title": "Cómo configurar un servidor DHCP", "url": "/posts/como-configurar-un-servidor-dhcp/", "categories": "Sysadmin, Protocolos, Teoria", "tags": "protocolos, sysadmin, networking, teoria, knowledge", "date": "2022-02-07 17:27:30 +0100", "snippet": "Índice ¿Qué es el protocolo DHCP? El funcionamiento del protocolo DHCP Métodos de asignación bajo el protocolo DHCP Nuestro servidor DHCP en Ubuntu Introducción Instalación del servidor DHCP Configurar nuestro servidor DHCP Comprobación de la configuración y funcionamiento Conclusión¿Qué es el protocolo DHCP?El DHCP (Dynamic Host Configuration Protocol) es un protocolo que admite que un activo conectado a una red se le pueda asignar su propia configuración alojada en un servidor, de ahí, la distinción entre cliente y servidor en cuanto a DHCP se refiere. Todo esto se realiza de forma dinámica, es decir, no tendremos que ajustar ningún tipo de configuración especial de manera manual en los equipos clientes que se incluyan en los ajustes del servidor. Básicamente con fines de simplificación a la hora de administrar la red en cuestión.El protocolo DHCP be like… pero bueno, ya tendremos tiempo en indagar DORAEl funcionamiento del protocolo DHCPPerfecto, aunque ¿cómo lo podríamos definir de forma amena? El DHCP se basa en cuestión de peticiones de cliente a servidor y viceversa, me explico, el servidor cuando está en marcha está a la espera de peticiones de los clientes que constan en su configuración.Cuando uno de estos clientes enciende el equipo o pone en marcha su dispositivo y no sabe cuál es su IP, de forma automática envia una petición de tipo DHCP Discover al servidor que es el encargado de enviar una respuesta de tipo DHCP Offer por lo que oferta y asigna lo siguiente: la dirección IP, la puerta de enlace (gateway) y los servidores DNS que apliquen.De esta forma se establece una comunicación de cliente a servidor (y viceversa), como bien he comentado anteriormente. Por lo tanto, una vez aceptada la respuesta del servidor, el cliente envia de nuevo una respuesta de tipo DHCP Request asumiendo la configuración ofrecida por el servidor.Paralelamente, el servidor, mantiene en su pequeña caché de este servicio y/o protocolo toda una lista de aquellos clientes con las IP asignadas en este challenge, con este fin, evita que se repita el proceso con una doble asignación de IP con otro cliente.Si aún así no ha quedado claro, te dejo este esquema que he hecho, el cual me ha costado años de dedicación y 500 horas de cursos de Photoshop CS6:Comunicación entre cliente y servidor bajo el protocolo DHCP El cliente enciende su dispositivo y ‘está perdido’ necesita su dirección IP, por lo que hace una petición DHCP Discover al servidor. El servidor ‘encamina’ al cliente bajo una respuesta DHCP Offer que incluye su dirección IP, la gateway y los servidores DNS. El cliente acepta la oferta del servidor bajo una petición DHCP Request, asume la configuración y se le asigna lo anteriormente dicho. El servidor guarda la información del proceso en su caché y recuerda la IP asignada al cliente para futuros challenges.Métodos de asignación bajo el protocolo DHCPTenemos dos tipos distintos de asignación DHCP: el manual y el automático. Manual –&amp;gt; Bajo este método, la dirección IP se asigna en base a la MAC del dispositivo lo cual asegura que una máquina en concreto tenga una IP estática asignada por el mismo servidor DHCP. Por lo que el mismo servidor DHCP siempre estará enviando una configuración estática al cliente dependiendo de su MAC. Automático –&amp;gt; Esta manera consta en la asignación automática del conjunto de direcciones IP, dependiendo de la manera que vayan enviando las peticiones los clientes expuestos en la configuración DHCP y recibiendo las respuestas por parte del servidor. Se puede bifurcar en dos categorias basadas en el tiempo: un lapso de tiempo fijado o permanente y/e infinito. Tiempo fijado –&amp;gt; Cuando un cliente queda obsoleto o fuera de la red gestionada por el mismo servidor DHCP, la configuración expira y se ‘libera’. ¿Qué quiere decir esto? Básicamente, la dirección IP que tenía fijada este mismo cliente, queda disponible para otros futuros clientes de la red. Por lo que esta IP se agrupa con las demás disponibles para que el mismo servidor pueda ofrecerla. En cambio, si el cliente quiere mantener su misma IP, bajo esta configuración, tiene que ‘renegociar’ con el servidor en el lapso de tiempo ajustado para persistirla. Tiempo infinito –&amp;gt; De forma sencilla, se mantiene de forma permanente la IP asignada por el servidor al cliente. Es algo como así, la verdad…Nuestro servidor DHCP en UbuntuIntroducciónAntes de empezar, cabe recalcar que estaré utilizando el siguiente laboratorio para testear y montar nuestro DHCP Server con un cliente Windows: Ubuntu Server 20.04.1 LTS (Focal Fossa) [DHCP Server] (*) Ojo, cabe recalcar que las versiones Desktop y Server son ligeramente distintas, te recomiendo leer este artículo. Windows XP Professional SP2También configuraremos mediante las opciones de red del mismo VirtualBox, una red interna que compartan tanto nuestro Ubuntu Server como el cliente Windows, quedándose así:Configuración de red de Ubuntu ServerConfiguración de red de Windows XPInstalación del servidor DHCPEn nuestra máquina con Ubuntu, ejecutaremos la siguiente orden para instalar el package isc-dhcp-server:sudo apt install isc-dhcp-serverConfigurar nuestro servidor DHCPSiendo precavidos, tenemos que tener en cuenta que nuestro fichero de configuración es /etc/dhcp/dhcpd.conf, por lo que haremos un respaldo:sudo mv /etc/dhcp/dhcpd.conf /etc/dhcp/dhcpd_backup.confTras hacer este pequeño backup de la configuración inicial, crearemos el archivo de configuración con el mismo nombre y comenzaremos a editar el fichero de configuración con cualquier IDE, yo optaré por nano:sudo touch /etc/dhcp/dhcpd.confsudo nano /etc/dhcp/dhcpd.confUna vez abierto, copiaremos el siguiente contenido dentro del archivo de configuración:default-lease-time 600;max-lease-time 7200;authoritative; subnet 192.168.1.0 netmask 255.255.255.0 { range 192.168.1.10 192.168.1.25; option routers 192.168.1.254; option domain-name-servers 192.168.1.1, 192.168.1.2;}Para ser más exhaustivos investigaremos cada opción establecida en el fichero de configuración, para ver qué estamos poniendo: default-lease-time: Es el lapso de tiempo de concesión, es decir, el tiempo predefinido a conceder la petición o inicializar el challenge (DHCP Offer) en caso de que el cliente no indique ningún tiempo predeterminado. max-lease-time: Es el lapso de tiempo máximo de concesión, en este caso está predefinido a 7200 segundos o mejor dicho 2 horas. authoritative: Indica que es el servidor DHCP oficial para la red local, quién tiene la autoridad básicamente. En este caso el servidor está configurado para servir las IP en un rango del 192.168.1.10 al 192.168.1.25, o para simplificar, 15 hosts máximos en nuestra red. El servidor enviará al cliente la información de asignar la IP 192.168.1.254 como su puerta de enlace predeterminada y las IP 192.168.1.1 y 192.168.1.2 como servidores DNS.Una vez definamos esta configuración, tenemos que tener bien en claro que si queremos ajustar una IP estática a nuestro cliente y queremos garantizarla, como bien he explicado antes en los tipos de ajustes DHCP, debemos de utilizar su MAC. Siendo una máquina virtual nuestro cliente Windows, podemos obtener la MAC muy fácil desde la configuración de red del mismo hipervisor, en este caso VirtualBox:MAC de nuestro cliente WindowsOjo con esto último, ya que deberemos de elegir la MAC de la interfaz de red con la cual queramos configurar nuestro servidor DHCP. También es de tener en cuenta el hostname de nuestra máquina cliente ya que configuraremos por cuantos clientes tengamos un bloque distinto en el fichero /etc/dhcp/dhcpd.conf.Hostname de nuestro cliente Windows (windows)Avisadas ya estas dos cosillas, podemos meter este bloque debajo de nuestra configuración del servidor DHCP:host windows { hardware ethernet 08:00:27:a7:60:28; fixed-address 192.168.1.10;}Explicando cada opción del bloque: host: Indicamos el hostname, en este caso windows. hardware ethernet: Indicamos la MAC de la máquina, que hemos sustraido del hipervisor. fixed-address: Ponemos la IP estática a nuestro gusto que servirá el servidor al cliente Windows.Por lo que nuestro fichero de configuración /etc/dhcp/dhcpd.conf tiene que asemejarse de tal forma:default-lease-time 600;max-lease-time 7200;authoritative; subnet 192.168.1.0 netmask 255.255.255.0 { range 192.168.1.10 192.168.1.25; option routers 192.168.1.254; option domain-name-servers 192.168.1.1, 192.168.1.2;}host windows { hardware ethernet 08:00:27:a7:60:28; fixed-address 192.168.1.10;}Claro que si queremos que la IP se asigne de forma dinámica, podemos omitir los bloques estáticos anteriormente explicados, siempre y cuando se compartan la misma interfaz: tanto el servidor DHCP como el/los cliente/s DHCP. Por lo que se ofrecerá una IP del rango ajustado en la configuración, (x.x.x.10 al x.x.x.25).Finalmente, como el protocolo DHCP permite alojar distintas interfaces, podemos definir una interfaz concreta a la escucha, en mi caso será la interfaz que aloje la red interna que hemos creado intnet.En mi equipo servidor (Ubuntu), me indica que la interfaz tiene el nombre de ‘enp0s8’ haciendo uso de ip a:Interfaz de la red interna ‘intnet’Por lo que deberemos de indicarle dicha interfaz en el fichero /etc/default/isc-dhcp-server:sudo nano /etc/default/isc-dhcp-serverEstablecemos enp0s8 como interfaz a la escucha en el DHCP ServerTras hacer esto, deberemos de configurar manualmente la IP estática para nuestro servidor DHCP, en la misma configuración de interfaces. Esto podemos hacerlo por GUI o via comando en el fichero /etc/netplan (en otras distros. se puede llegar al caso de que esté en /lib/netplan, /run/netplan e inclusive /etc/network/interfaces):Configuración de red en el servidor DHCPComprobación de la configuración y funcionamientoUna vez hecho, reiniciamos el servicio DHCP con la siguiente instrucción y vemos el estado del servicio:sudo systemctl restart isc-dhcp-server.servicesudo systemctl status isc-dhcp-server.serviceEstado del servicio isc-dhcp-server.service exitosoTras acabar todo esto, se nos queda una cara tal como así:Efectivamente, es mi cara ahora mismo tras escribir todo estoPero… podemos comprobar que todo ha ido correctamente y efectivamente tanto el servidor Ubuntu se comunica con nuestro cliente y viceversa:IP asignada por reserva DHCPComunicación exitosa de nuestra máquina Windows (cliente) al servidor Ubuntu Un pequeño disclaimer que hay que señalar: por temas de bloqueo de paquetes ICMP debido al firewall de Windows y su AV, no podremos hacer ping predeterminadamente de un sistema Linux a un Windows. Deberemos de deshabilitar el AV y funcionalidades para evitar el bloqueo ICMP.ConclusiónRecapitulando todo el post, podemos extraer que es una gran manera de gestionar nuestra red ya sea empresarial o la doméstica si aplica, que nos da un control general sobre los dispositivos conectados (clientes) a nuestro servidor. Como también, podemos realizar diferentes tareas de adminsitración, control y compartición de recursos que pueden aplicar a cualquier máquina-cliente con cualquier tipo de sistema operativo e incluso cualquier dispositivo que tenga conexión a la red.– Huesos" }, { "title": "Pivoting, el arte de saltar por las redes", "url": "/posts/pivoting-el-arte-de-saltar-por-las-redes/", "categories": "Pentesting, Pivoting, Teoria", "tags": "pivoting, pentesting, networking, tunnels, teoria, knowledge", "date": "2022-02-06 13:22:30 +0100", "snippet": "Índice ¿Qué es el Pivoting? Entrando al caso ejemplificado Metodología del pivoting Introducción Enumeración Herramientas Conclusión ¿Qué es el Pivoting?El Pivoting es una técnica de escalamiento o escalado de red, utilizada por los pentesters a la hora de enumerar diferentes redes existentes conectadas a un equipo de una red específica ya vulnerada.¿Qué quiere decir esto último? A grosso modo, es el ‘arte’ o la acción de saltar entre redes y/e interfaces con conectividad a la misma red de la máquina vulnerada.Entrando al caso ejemplificadoPor lo tanto, de manera recursiva, mediante esta técnica, podemos ir “saltando” entre dispositivos que hayamos podido vulnerar, estos comparten la misma red del primer dispositivo conjunto a otra/s interfaz/ces.Entonces, bajo “una sucesión de Fibonacci” podríamos llegar a nuestro punto final, según la arquitectura o topología de red de la víctima y siempre que podamos comprometer el siguiente dispositivo a pivotar.Siguiendo un ejemplo gráfico más ameno:Ejemplo de red dónde emplearíamos pivotingPrincipalmente, una de las cosas que han quedado claras tras ver este ejemplo es que el diseño gráfico no es lo mío, mejor se lo dejamos a otr@s…Graphic design is my passionSiguiendo el hilo del tema, en la imagen se nos da a entender un caso donde el atacante tiene acceso a una máquina que hace frontera o limita el acceso entre Internet y una red privada empresarial. En esta última podemos encontrar un router (R1), dos ordenadores (el fronterizo PC1 y uno incluído dentro de la red aislada PC2), un teléfono VOIP (VOIP Phone) y finalmente nuestro destino final más jugoso: el servidor (server).Metodología del pivotingIntroducciónEntonces, ¿cómo procedemos? Tenemos que establecernos una metodología o unos pasos a hacer a la hora de actuar bajo esta técnica: Encontrar un dispositivo al cual podamos saltar y/o pivotar, valga la redundancia. Tras pivotar, podemos enumerar diferentes vectores de ataque en el mismo dispositivo pivotado. Explotar las vulnerabilidades mediante el vector de ataque y volver a pivotar.Todo un símil a un while infinito hasta que podamos acceder a nuestro punto final, el servidor.EnumeraciónLlegados a este punto, podemos preguntarnos, bien, ¿y… cómo empiezo? ¿qué debo de hacer? Pues como todo pentester en su principio ante una máquina debe de enumerar todo aquello de interés para poder realizar en este caso, pivoting hacia su siguiente objetivo. Cosa que una vez vulneremos una máquina podamos seguir ciertos paths o ciertas rutas del sistema que nos lleve a una enumeración de diferentes redes coexistentes dentro de la máquina y que compartan a lo mejor, más dispositivos en la misma red privada.Bajo mi experiencia, recomiendo siempre echar un vistazo a los archivos hosts de la máquina ya sea Windows o Linux, podemos encontrar diferentes guesses o pistas de ruta a seguir que nos de a entender que hay más interfaces de red compartidas en el activo:En máquinas Windows podemos localizar el archivo en la siguiente ruta: C:\\Windows\\System32\\drivers\\etc\\hosts . Por consiguiente, en Linux podremos encontrarlo en la ya conocida ruta: /etc/hosts.Otra manera de enumerar diferentes interfaces coexistentes en la misma máquina que dan conectividad a más activos, podría ser ejecutando el comando ip a, con alternativa a ìfconfig ya que este último no suele estar preinstalado en las distribuciones de Linux, por lo que necesita el package net-utils. Más de lo mismo en las máquinas Windows, podemos hacer uso del comando que viene por defecto tanto en una cmd normal como en powershell: ìpconfig.Más opciones viables de esto último e importante a saber es que podemos utilizar la opción /all de ipconfig en Windows para descubrir servidores DNS. En Linux, es equivalente a /etc/resolv.conf.Podemos proceder también a enumerar la caché ARP del activo, con arp -a tanto en máquinas con sistema operativo Linux o Windows. Lo que nos puede reportar nuevas direcciones IP que puedan tener conectividad con la máquina.A relación con esto podemos ejecutar ip route o route -n (valga la redundancia) a fin de mostrar la tabla routing en distros. Linux. Al uso de echar un vistazo a las diferentes opciones de netstat como por ejemplo -alpn e inclusive -tnpanu que a grosso modo, esto, nos arrojaría las conexiones establecidas con pseudohosts en la red.Es también un tanto notorio trastear con el directorio /proc en distros. Linux sobre todo en las rutas /proc/net/fib_trie y /proc/net/route , lo que nos devuelve estos dos ficheros es la configuración de interfaces disponibles en la misma máquina y su enrutación (ojo, esto último nos lo reporta en hexa, por lo que debemos de convertirlo para visualizar la información en su plena disponibilidad).Por último, siempre recomiendo ser ingenioso y aprovecharnos del archivo /dev/tcp para hacer un port discovery y ping (si lo tiene instalado la misma máquina) para realizar un host discovery, de manera que con un sencillo script en bash podemos realizar este tipo de escaneo:Port Discovery:for puerto in $(seq 1 65535); do (timeout 1 bash -c &quot;echo &quot;&quot; &amp;gt; /dev/tcp/IP_maquina/$puerto&quot;) &amp;amp;&amp;amp; echo &quot;$puerto OPEN&quot; || echo &quot;$puerto CLOSED&quot;; doneHost Discovery:for host in $(seq 1 254); do (timeout 1 bash -c &quot;ping -c 1 IP_maquina.$host&quot;) &amp;amp;&amp;gt;/dev/null &amp;amp;&amp;amp; echo &quot;IP_maquina.$host encontrado.&quot;; donePodemos aplicar subprocesos en bash haciendo uso de &amp;amp; y wait en el mismo bucle, pero a mi gusto prefiero ser precavido y prescindir de esto.Tu al leer todo este textardoHerramientasDespués de tener una gran enumeración y una amplia información acerca de la topologia de la red víctima, podemos realizar el pivoting para compartirnos aquellos recursos que no podemos ver desde nuestra máquina. Algunas herramientas de interés, que en un futuro no tan lejano, iré explicando su funcionamiento en el blog, son: Chisel Socat Proxychains SSHCabe destacar, que, tan solo he destacado las más famosas y por lo tanto habrán cientos de herramientas que puedan emular su funcionamiento e incluso mejorarlo.¿Hace falta algo más?ConclusiónEl pivoting es una técnica que beneficia tanto a nuestra red como a redes externas para realizar auditorias de pentesting. Como no, siempre se puede utilizar este mismo recurso para emularlo en tu propia red y hacer los diferentes tipos de port forwarding, según aplique (ya sea dynamic, remote o local) para ‘transportarte’ un recurso de tu otro ordenador al tuyo.Desde luego, es una metodología que hay que investigar e ir con ojo, sobre todo contrarrestarla con aislamientos de red, reglas de firewall como iptables, configuraciones de VPNs enfocadas a empresas y/u otras técnicas que eviten que ciertos atacantes puedan llegar a los recursos más valiosos de la empresa o incluso los nuestros.– Huesos" } ]
